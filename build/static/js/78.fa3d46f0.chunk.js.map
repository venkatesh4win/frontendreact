{"version":3,"sources":["app/basic-ui/Progress.js"],"names":["Progress","className","aria-label","href","onClick","event","preventDefault","aria-current","variant","now","striped","animated","label","value","text","styles","buildStyles","strokeLinecap","AnimatedProgressProvider","valueStart","valueEnd","duration","easingFunction","easeQuadInOut","repeat","roundedValue","Math","round","pathTransition","ChangingProgressProvider","values","percentage","pathTransitionDuration","Component","interval","undefined","state","isAnimated","this","props","window","setInterval","setState","clearInterval","start","update","timing","ease","children","React","defaultProps","valuesIndex","length"],"mappings":"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","file":"static/js/78.fa3d46f0.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { ProgressBar } from 'react-bootstrap';\nimport {\n  CircularProgressbar,\n  buildStyles,\n} from 'react-circular-progressbar';\nimport { Animate } from \"react-move\";\nimport { easeQuadInOut } from 'd3-ease';\n\nexport class Progress extends Component {\n  render() {\n    return (\n      <div>\n        <div className=\"page-header\">\n          <h3 className=\"page-title\">\n            Progress\n          </h3>\n          <nav aria-label=\"breadcrumb\">\n            <ol className=\"breadcrumb\">\n              <li className=\"breadcrumb-item\"><a href=\"!#\" onClick={event => event.preventDefault()}>UI Elements</a></li>\n              <li className=\"breadcrumb-item active\" aria-current=\"page\">Progress</li>\n            </ol>\n          </nav>\n        </div>\n        <div className=\"row\">\n          <div className=\"col-md-6 grid-margin stretch-card\">\n            <div className=\"card\">\n              <div className=\"card-body\">\n                <h4 className=\"card-title\">Colored Progressbar</h4>\n                <p className=\"page-description\">Add property <code>variant=&#123;color&#125;</code> for theme colors</p>\n                <div className=\"template-demo\">\n                  <ProgressBar variant=\"success\" now={10}/>\n                  <ProgressBar variant=\"primary\" now={25}/>\n                  <ProgressBar variant=\"info\" now={50}/>\n                  <ProgressBar variant=\"warning\" now={75}/>\n                  <ProgressBar variant=\"danger\" now={100}/>\n                </div>\n              </div>\n            </div>\n          </div>\n          <div className=\"col-md-6 grid-margin stretch-card\">\n            <div className=\"card\">\n              <div className=\"card-body\">\n                <h4 className=\"card-title\">Progressbar Striped</h4>\n                <p className=\"page-description\">Add property <code>striped</code>.</p>\n                <div className=\"template-demo\">\n                  <ProgressBar variant=\"success\" now={10} striped/>\n                  <ProgressBar variant=\"primary\" now={25} striped/>\n                  <ProgressBar variant=\"info\" now={50} striped/>\n                  <ProgressBar variant=\"warning\" now={75} striped/>\n                  <ProgressBar variant=\"danger\" now={100} striped/>\n                </div>\n              </div>\n            </div>\n          </div>\n          <div className=\"col-md-6 grid-margin stretch-card\">\n            <div className=\"card\">\n              <div className=\"card-body\">\n                <h4 className=\"card-title\">Striped Animated</h4>\n                <p className=\"page-description\">Add property <code>animated</code>.</p>\n                <div className=\"template-demo\">\n                  <ProgressBar variant=\"success\" now={10} animated/>\n                  <ProgressBar variant=\"primary\" now={25} animated/>\n                  <ProgressBar variant=\"info\" now={50} animated/>\n                  <ProgressBar variant=\"warning\" now={75} animated/>\n                  <ProgressBar variant=\"danger\" now={100} animated/>\n                </div>\n              </div>\n            </div>\n          </div>\n          <div className=\"col-md-6 grid-margin stretch-card\">\n            <div className=\"card\">\n              <div className=\"card-body\">\n                <h4 className=\"card-title\">With Label</h4>\n                <p className=\"page-description\">Progress bar with labels</p>\n                <div className=\"template-demo\">\n                  <ProgressBar variant=\"danger\" className=\"progress-lg\" now={60} label={`600%`}/>\n                  <ProgressBar variant=\"success\" className=\"progress-lg\" now={90} label={`90%`}/>          \n                  <ProgressBar variant=\"warning\" className=\"progress-lg\" now={60} label={`60% complete`}/>        \n                  <ProgressBar variant=\"info\" className=\"progress-lg\" now={88} label={`88% complete`}/>        \n                </div>\n              </div>\n            </div>\n          </div>\n          <div className=\"col-md-6 gid-margin grid-margin-md-0 stretch-card\">\n            <div className=\"card\">\n              <div className=\"card-body\">\n                <h4 className=\"card-title\">Progressbar Sizes</h4>\n                <p className=\"page-description\">Use className <code>.progress-sm</code>, <code>.progress-lg</code>, <code>.progress-xl</code></p>\n                <div className=\"template-demo\">\n                  <ProgressBar variant=\"info\" className=\"progress-sm\" now={25}/>\n                  <ProgressBar variant=\"info\" className=\"progress\" now={50}/>          \n                  <ProgressBar variant=\"info\" className=\"progress-lg\" now={75}/>          \n                  <ProgressBar variant=\"info\" className=\"progress-xl\" now={100}/>          \n                </div>\n              </div>\n            </div>\n          </div>\n          <div className=\"col-md-6 stretch-card\">\n            <div className=\"card\">\n              <div className=\"card-body\">\n                <h4 className=\"card-title\">Circular Progressbar</h4>\n                <p className=\"page-description\">Circle progress using react-circular-progressbar plugin</p>\n                <div className=\"template-demo d-flex\">\n                  <div className=\"p-2\">\n                    <CircularProgressbar value={66} text=\"66\" />\n                  </div>\n                  <div className=\"p-2\">\n                    <CircularProgressbar\n                      value={48}\n                      text=\"48\"\n                      styles={buildStyles({\n                        strokeLinecap: 'butt',\n                      })}\n                    />\n                  </div>\n                  <div className=\"p-2\">\n                    <AnimatedProgressProvider\n                      valueStart={0}\n                      valueEnd={74}\n                      duration={1.4}\n                      easingFunction={easeQuadInOut}\n                      repeat\n                    >\n                      {value => {\n                        const roundedValue = Math.round(value);\n                        return (\n                          <CircularProgressbar\n                            value={value}\n                            text={`${roundedValue}%`}\n                            /* This is important to include, because if you're fully managing the\n                      animation yourself, you'll want to disable the CSS animation. */\n                            styles={buildStyles({ pathTransition: 'none' })}\n                          />\n                        );\n                      }}\n                    </AnimatedProgressProvider>\n                  </div>\n                  <div className=\"p-2\">\n                    <ChangingProgressProvider values={[0, 20, 40, 60, 80, 100]}>\n                      {percentage => (\n                        <CircularProgressbar\n                          value={percentage}\n                          text={`${percentage}%`}\n                          styles={buildStyles({\n                            pathTransitionDuration: 0.15,\n                          })}\n                        />\n                      )}\n                    </ChangingProgressProvider>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default Progress\n\nclass AnimatedProgressProvider extends React.Component {\n  interval = undefined;\n\n  state = {\n    isAnimated: false\n  };\n\n  static defaultProps = {\n    valueStart: 0\n  };\n\n  componentDidMount() {\n    if (this.props.repeat) {\n      this.interval = window.setInterval(() => {\n        this.setState({\n          isAnimated: !this.state.isAnimated\n        });\n      }, this.props.duration * 1000);\n    } else {\n      this.setState({\n        isAnimated: !this.state.isAnimated\n      });\n    }\n  }\n\n  componentWillUnmount() {\n    window.clearInterval(this.interval);\n  }\n\n  render() {\n    return (\n      <Animate\n        start={() => ({\n          value: this.props.valueStart\n        })}\n        update={() => ({\n          value: [\n            this.state.isAnimated ? this.props.valueEnd : this.props.valueStart\n          ],\n          timing: {\n            duration: this.props.duration * 1000,\n            ease: this.props.easingFunction\n          }\n        })}\n      >\n        {({ value }) => this.props.children(value)}\n      </Animate>\n    );\n  }\n}\n\nclass ChangingProgressProvider extends React.Component {\n  static defaultProps = {\n    interval: 1000\n  };\n\n  state = {\n    valuesIndex: 0\n  };\n\n  componentDidMount() {\n    setInterval(() => {\n      this.setState({\n        valuesIndex: (this.state.valuesIndex + 1) % this.props.values.length\n      });\n    }, this.props.interval);\n  }\n\n  render() {\n    return this.props.children(this.props.values[this.state.valuesIndex]);\n  }\n}\n"],"sourceRoot":""}